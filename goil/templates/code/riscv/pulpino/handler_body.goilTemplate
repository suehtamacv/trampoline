.global ISR_% !handlerSource %
.extern % !handlerIRQ %
.extern tpl_leave_ie_untouched

/*---------------------------------------------------------------------------*/
ISR_% !handlerSource %:

    /*-------------------------------------------------------------------------
     * 1 - Interrupt function call
     */
    jal % !handlerIRQ %

    /*-------------------------------------------------------------------------
     * 2 - Check the context switch condition in tpl_kern
     */
    la a0, tpl_kern
    lb a6, TPL_KERN_OFFSET_NEED_SWITCH(a0)
    beq a6, zero, 1f

    /*-------------------------------------------------------------------------
     * 3 - Save context
     *     Load in a0 the pointer to the static descriptor of the running task
     *     a0 already points to tpl_kern (from stage 2)
     */
    lw  a0, TPL_KERN_OFFSET_S_RUNNING(a0)
    lw  a0, 0(a0)
    jal tpl_save_context

    /*-------------------------------------------------------------------------
     * 4 - Call tpl_run_elected.
     *     The argument is a boolean which is true if the process is
     *     preempted. Here it is true because in an interrupt handler
     *     a process is inevitably preempted
     */
    li a0, 1
    jal tpl_run_elected

    /*----------------------------------------------------------------------o---
     * 5 - Load context
     *     Load in a0 the pointer to the context of the running task.
     *     It has been changed by tpl_run_elected
     */
    la  a0, tpl_kern
    lw  a0, TPL_KERN_OFFSET_S_RUNNING(a0)
    lw  a0, 0(a0)
    jal tpl_load_context
1:
% if category == 2 then %
/* deactivates at least current interruption */
    /* set priority */
    la  a0, tpl_kern
    lw  a0, TPL_KERN_OFFSET_S_RUNNING(a0)
    lw  a0, 0(a0)
    jal tpl_set_priority

    csrr a5, mcause
    li a6, 1
    sll a5, a6, a5
    not a5, a5
    li a6, 0x1a104000
    lw a7, 0(a6)
    and a7, a7, a5
    sw a7, 0(a6)

% end if %
    la a6, tpl_leave_ie_untouched
    lw a6, 0(a6)
    seqz a6, a6
    csrs 0x7c0, a6
    j tpl_no_context_switch
